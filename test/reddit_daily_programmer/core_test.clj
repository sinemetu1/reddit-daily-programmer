(ns reddit-daily-programmer.core-test
  (:require [clojure.test :refer :all]
            [reddit-daily-programmer.core :refer :all]))

(deftest test-easy-146
  (is (= (easy-146 "5 3.7")   "21.748"))
  (is (= (easy-146 "100 1.0") "6.282")))

(deftest test-interm-140
  (is (= (interm-140 "10"
                     "0 1 0 0 1 1 0 0 0 0
                      1 0 1 0 0 0 1 0 0 0
                      0 1 0 1 0 0 0 1 0 0
                      0 0 1 0 1 0 0 0 1 0
                      1 0 0 1 0 0 0 0 0 1
                      1 0 0 0 0 0 0 1 1 0
                      0 1 0 0 0 0 0 0 1 1
                      0 0 1 0 0 1 0 0 0 1
                      0 0 0 1 0 1 1 0 0 0
                      0 0 0 0 1 0 1 1 0 0") 2))
  ;(is (= (interm-140 "24"
                     ;"0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
                      ;1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
                      ;0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
                      ;0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
                      ;1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0
                      ;0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0
                      ;0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0
                      ;0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0
                      ;0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0
                      ;0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0
                      ;0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1
                      ;0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0
                      ;1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0
                      ;0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1
                      ;0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0") 4))
  ;(is (= (interm-140 "20"
                     ;"0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0
                      ;0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1
                      ;0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0
                      ;0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1
                      ;0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1
                      ;0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0
                      ;0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0
                      ;0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
                      ;1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
                      ;1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0
                      ;0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
                      ;0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0
                      ;0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0") 5))
  )

(deftest test-build-node-list
  (is (= (build-node-list "64 40 32 65
                           65 64 32 31")
         [["64" '("40" "32" "65")]
          ["65" '("64" "32" "31")]])))

(deftest test-visit-node
  (let [actual (visit-node [65 '(64 32 31)] {32 0
                                             31 2})]
    (is (= (get actual 65) 1)))

  (let [actual (visit-node [65 '(64 32 31)] {32 1 
                                             31 2})]
    (is (= (get actual 65) 0)))
  (let [actual (visit-node [65 '(64 32 31)] {32 0 
                                             31 1})]
    (is (= (get actual 65) 2))))

(deftest test-hard-130
  (let [actual (hard-130 "8"
                   "64 40 32 65
                    65 64 32 31
                    31 65 32 82 81 11 9
                    9 31 11 66
                    66 9 11
                    40 33 47 32 64
                    32 40 47 82 31 65 64
                    11 31 81 34 66 9")]
    (is (= (sort actual) '(["11" 2]
                           ["31" 1]
                           ["32" 2]
                           ["33" 1]
                           ["34" 0]
                           ["40" 0]
                           ["47" 1]
                           ["64" 1]
                           ["65" 0]
                           ["66" 1]
                           ["81" 0]
                           ["82" 0]
                           ["9" 0]))))
  (let [actual (hard-130 "6"
                         "1 4 6
                          2 3 5
                          3 2 6
                          4 1 5
                          5 2 4
                          6 1 3")]
    (is (= (sort actual) '(["1" 2]
                           ["2" 2]
                           ["3" 0]
                           ["4" 0]
                           ["5" 1]
                           ["6" 1])))))

(deftest test-easy-147
  (let [actual (easy-147 35)]
    (is (= actual "Valid Score")))
  
  (let [actual (easy-147 2)]
    (is (= actual "Invalid Score"))))

(run-tests 'reddit-daily-programmer.core-test)
